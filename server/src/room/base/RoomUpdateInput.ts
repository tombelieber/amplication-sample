/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumRoomAllowedFrequency } from "./EnumRoomAllowedFrequency";
import {
  IsEnum,
  IsOptional,
  IsDate,
  IsInt,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { RoomEnrollmentUpdateManyWithoutRoomsInput } from "./RoomEnrollmentUpdateManyWithoutRoomsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { PlatformTierWhereUniqueInput } from "../../platformTier/base/PlatformTierWhereUniqueInput";
import { EnumRoomStatus } from "./EnumRoomStatus";
@InputType()
class RoomUpdateInput {
  @ApiProperty({
    required: false,
    enum: EnumRoomAllowedFrequency,
    isArray: true,
  })
  @IsEnum(EnumRoomAllowedFrequency, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumRoomAllowedFrequency], {
    nullable: true,
  })
  allowedFrequency?: Array<"OneOff" | "Failed" | "Pending">;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  billingDate?: Date;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  capcity?: number;

  @ApiProperty({
    required: false,
    type: () => RoomEnrollmentUpdateManyWithoutRoomsInput,
  })
  @ValidateNested()
  @Type(() => RoomEnrollmentUpdateManyWithoutRoomsInput)
  @IsOptional()
  @Field(() => RoomEnrollmentUpdateManyWithoutRoomsInput, {
    nullable: true,
  })
  enrollments?: RoomEnrollmentUpdateManyWithoutRoomsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PlatformTierWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PlatformTierWhereUniqueInput)
  @IsOptional()
  @Field(() => PlatformTierWhereUniqueInput, {
    nullable: true,
  })
  platformTier?: PlatformTierWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  remainingCapcity?: number;

  @ApiProperty({
    required: false,
    enum: EnumRoomStatus,
  })
  @IsEnum(EnumRoomStatus)
  @IsOptional()
  @Field(() => EnumRoomStatus, {
    nullable: true,
  })
  status?: "Public" | "Private" | "Archive";
}
export { RoomUpdateInput };
