/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { IntFilter } from "../../util/IntFilter";
import { RoomEnrollmentListRelationFilter } from "../../roomEnrollment/base/RoomEnrollmentListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { PlatformTierWhereUniqueInput } from "../../platformTier/base/PlatformTierWhereUniqueInput";
import { EnumRoomStatus } from "./EnumRoomStatus";
@InputType()
class RoomWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  billingDate?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  capcity?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => RoomEnrollmentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RoomEnrollmentListRelationFilter)
  @IsOptional()
  @Field(() => RoomEnrollmentListRelationFilter, {
    nullable: true,
  })
  enrollments?: RoomEnrollmentListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PlatformTierWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PlatformTierWhereUniqueInput)
  @IsOptional()
  @Field(() => PlatformTierWhereUniqueInput, {
    nullable: true,
  })
  platformTier?: PlatformTierWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  remainingCapcity?: IntFilter;

  @ApiProperty({
    required: false,
    enum: EnumRoomStatus,
  })
  @IsEnum(EnumRoomStatus)
  @IsOptional()
  @Field(() => EnumRoomStatus, {
    nullable: true,
  })
  status?: "Public" | "Private" | "Archive";
}
export { RoomWhereInput };
