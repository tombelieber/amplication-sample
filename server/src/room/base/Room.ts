/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumRoomAllowedFrequency } from "./EnumRoomAllowedFrequency";
import {
  IsEnum,
  IsOptional,
  IsDate,
  IsInt,
  ValidateNested,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { RoomEnrollment } from "../../roomEnrollment/base/RoomEnrollment";
import { User } from "../../user/base/User";
import { PlatformTier } from "../../platformTier/base/PlatformTier";
import { EnumRoomStatus } from "./EnumRoomStatus";
@ObjectType()
class Room {
  @ApiProperty({
    required: true,
    enum: EnumRoomAllowedFrequency,
    isArray: true,
  })
  @IsEnum(EnumRoomAllowedFrequency, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumRoomAllowedFrequency], {
    nullable: true,
  })
  allowedFrequency?: Array<"OneOff" | "Failed" | "Pending">;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  billingDate!: Date;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  capcity!: number;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: () => [RoomEnrollment],
  })
  @ValidateNested()
  @Type(() => RoomEnrollment)
  @IsOptional()
  enrollments?: Array<RoomEnrollment>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  owner?: User;

  @ApiProperty({
    required: true,
    type: () => PlatformTier,
  })
  @ValidateNested()
  @Type(() => PlatformTier)
  platformTier?: PlatformTier;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  remainingCapcity!: number;

  @ApiProperty({
    required: true,
    enum: EnumRoomStatus,
  })
  @IsEnum(EnumRoomStatus)
  @Field(() => EnumRoomStatus, {
    nullable: true,
  })
  status?: "Public" | "Private" | "Archive";

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Room };
